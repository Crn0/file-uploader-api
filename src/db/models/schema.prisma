// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?  @unique @db.VarChar(255)
  email     String?  @unique @db.VarChar(255)
  password  String?  @db.VarChar(60)
  openIds   OpenId[]
  folders   Folder[]
  role      Role     @default(user)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(3)

  @@map("users")
}

model OpenId {
  id        Int      @id @default(autoincrement())
  provider  Provider
  tokenId   String   @unique @map("token_id") @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("open_ids")
}

model Folder {
  id                 Int          @id @default(autoincrement())
  name               String       @db.VarChar(255)
  path               String       @db.VarChar(255)
  owner              User         @relation(fields: [ownerId], references: [id])
  ownerId            Int          @map("owner_id")
  type               ResourceType @default(folder)
  folders            Folder[]     @relation("folders")
  systemetricFolders Folder[]     @relation("folders")
  files              File[]
  createdAt          DateTime     @default(now()) @map("created_at")
  updatedAt          DateTime     @default(now()) @map("updated_at")

  @@map("folders")
}

model File {
  id        Int          @id @default(autoincrement())
  name      String       @db.VarChar(255)
  url       String       @db.VarChar(255)
  publicId  String       @map("public_id") @db.VarChar(255)
  type      ResourceType @default(unknown)
  size      BigInt       @db.BigInt
  Folder    Folder       @relation(fields: [folderId], references: [id])
  folderId  Int          @map("folder_id")
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @default(now()) @map("updated_at")

  @@map("files")
}

enum Provider {
  google
}

enum Role {
  demo
  user
  admin
}

enum ResourceType {
  unknown
  folder
  png
  jpeg
  jpg
  webp
  epub
}